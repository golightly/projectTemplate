#1 main.cpp
main declares a new instance of the Program (2) class.
main passes the program instance by reference to runSDK (4)

#2 program.h
program is a struct 
contains ifstream (read) and ofstream (write) members
contains input string for general input
contains programpath string, received in newContinueSDK (5)
contains programName string, received in setupProgram (3)
contains programType string, indicates either opengl or dx12, received in setupProgram (3)
contains commandType string, stores key command word ie. "rm-scene", reset in resetSDKData (6), received in sdkGetCommandPath (7)
contains sceneImagePath string, stores second half of command ie. "myImage.png", reset in resetSDKData (6), received in sdkGetCommandPath (7)
contains scenePath string pointer, stores all scene paths, initialised in runSDK (4), received in setupProgram (3), modified in removeScene (8), addScene (9) and exitSDK (15)
contains sceneName string pointer, stores all scene names, initialised in runSDK (4), received in setupProgram (3), modified in removeScene (8) addScene (9) and exitSDK (15)
contains sceneNum int, initialised in runSDK (4), received in setupProgram (3), modified in removeScene (8) and addScene (9)
contains imageNum int, initialised in runSDK (4), received in setupProgram (3), modified in removeImage (10) and addImage (11)
contains scene (16) instance pointer, intended to point to only one scene, initialised in runSDK (4), setup in setupScene (12), modified in closeScene (13)
contains image (17) instance pointer, array of all image instances for program, initialised in runSDK (4), setup in setupProgram (3) and setupImage (14), modified in removeImage (10) addImage (11) and exitSDK (15)
contains memblock char pointer, used whenever binary data is read from a file

#3 program.cpp
contains setupProgram
checks if 0 index of input received in runSDK (4) is n or c
if n, gets program name and type from user
if c, gets program name, type, sceneNum, imageNum from .project file. calls setupImage for each image in a for loop, fills in sceneName and scenePath arrays from two for loops getting data from the file

#4 runSDK.cpp
initialises sceneNum, imageNum, scene, image, scenePath and sceneName to NULL or 0
calls newContinueSDK (5) which is passed program by reference
declares quitSDK bool, sets to false
while quitSDK is false, a while loop iterates through resetSDKData (6), sdkGetInput (18), and processSDKInput (19)
all of these are passed program by reference.  processSDKInput (19) is also passed quitSDK by reference

#5 newContinueSDK.cpp
gets n or c followed by the project path, puts the path in programPath, stores the whole line in input
calls setupProgram (3) passes it program by reference

#6 resetSDKData.cpp
if the scene is not null, deletes all its composite members and the scene itself and sets it to null
clears input, commandType and sceneImagePath

#7 sdkGetCommandPath.cpp
puts input into commandType using a for loop until it gets a usable command stored
skips the dash and puts the rest of input into sceneImagePath

#8 removeScene.cpp
asks user if scene should also be deleted from the hard drive.
if yes uses the remove function to delete the path stored in sceneImagePath
removes one scene: adjusts sceneNum, scenePath and sceneName

#9 addScene.cpp
