http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=iws-chapter08

use this approach for fonts.  go through the program and change it to use a similar system.  ie. divide letters into distinct
parts and write information describing how to represent each part.

write a separate testing program for this, sdl should be fine, just fill in different sized textures with the same letter at
different sizes to see how it scales.
how to create a blank texture https://wiki.libsdl.org/SDL_CreateTexture

hints here https://stackoverflow.com/questions/19107476/get-pixel-info-from-sdl2-texture

then use this http://lazyfoo.net/tutorials/SDL/40_texture_manipulation/index.php


a better way to do it maybe: http://lazyfoo.net/tutorials/OpenGL/23_freetype_fonts/index.php

though I don't like it.


would be easier to just make a set of png files at the maximum size i'd need them, convert them to my format in the usual
way with the script etc. and then use these images to create smaller pixel data in the program using the scaling algorithm
i saved to the snippets folder.  then unload the big character files.  this would require a separate set of pixel data for every
size required, but still more efficient than lots of giant images.

make a separate program to test this.

if that's unsatisfactory, could use the sdl truetype library and then extract the pixels for each character fed to 
it from a surface.  and then just use the pixels (would again require reusing for every different size).

http://lazyfoo.net/tutorials/SDL/16_true_type_fonts/index.php

https://www.libsdl.org/projects/SDL_ttf/docs/SDL_ttf.html

https://stackoverflow.com/questions/8111239/read-pixels-from-sdl-surface-and-convert-to-color-values

http://sdl.beuc.net/sdl.wiki/Pixel_Access

https://www.gamedev.net/forums/topic/636628-how-to-convert-to-rgba/

try to find this on a site for free http://www.high-logic.com/font-editor/fontcreator.html

use an opengl texture to display the resulting text from all this.  use the flappy bird code i already have for that i 
guess (will have to see what it even does, at this point...)
